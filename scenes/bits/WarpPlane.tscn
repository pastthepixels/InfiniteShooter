[gd_scene load_steps=10 format=2]

[ext_resource path="res://scenes/bits/WarpPlane.gd" type="Script" id=1]

[sub_resource type="PlaneMesh" id=79]
size = Vector2( 100, 100 )

[sub_resource type="Shader" id=74]
code = "// Modified from https://godotshaders.com/shader/speedlines/
shader_type spatial;

render_mode unshaded;

uniform sampler2D noise;
uniform vec4 background_color: hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform vec4 line_color_a: hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 line_color_b: hint_color = vec4(0.0, 1.0, 1.0, 1.0);
uniform float line_threshold = 0.6;
uniform float inverse_speed = 10.0;
uniform float line_length = 1000.0;
uniform float angle: hint_range(0.0, 360.0) = 0.0;
uniform float opacity: hint_range(0.0, 1.0) = 1.0;


void fragment() {
	vec2 uv = vec2(UV.x * cos(radians(angle)) - UV.y * sin(radians(angle)), UV.x * sin(radians(angle)) + UV.y * cos(radians(angle)));
	
	vec4 noise_line = texture(noise, vec2(uv.x / line_length + TIME / inverse_speed, uv.y));
	vec4 color;
	if (noise_line.r < line_threshold){
		color = vec4(0.);
	} else {
		color = mix(line_color_a, line_color_b, 1.0 - noise_line.r);
	}
	ALBEDO = background_color.rgb + color.rgb;
	ALPHA = (background_color.a + color.a) * opacity;
}"

[sub_resource type="OpenSimplexNoise" id=78]
octaves = 5
period = 43.4
persistence = 1.0

[sub_resource type="NoiseTexture" id=77]
width = 1024
height = 1024
seamless = true
noise = SubResource( 78 )

[sub_resource type="ShaderMaterial" id=75]
shader = SubResource( 74 )
shader_param/background_color = Color( 0, 0, 0, 1 )
shader_param/line_color_a = Color( 1, 0.972549, 0.972549, 1 )
shader_param/line_color_b = Color( 0.235294, 0.278431, 0.513726, 1 )
shader_param/line_threshold = 0.6
shader_param/inverse_speed = 150.0
shader_param/line_length = 1000.0
shader_param/angle = 0.0
shader_param/opacity = 0.0
shader_param/noise = SubResource( 77 )

[sub_resource type="Animation" id=80]
resource_name = "BackgroundSwap"
length = 11.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:material/0:shader_param/opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3, 6, 9 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 4.5, 6 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "set_rand_sky"
}, {
"args": [  ],
"method": "increase_sky_intensity"
} ]
}

[sub_resource type="Animation" id=82]
resource_name = "Make visible"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material/0:shader_param/opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=81]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material/0:shader_param/opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[node name="WarpPlane" type="MeshInstance"]
pause_mode = 1
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, -30, 0 )
visible = false
mesh = SubResource( 79 )
material/0 = SubResource( 75 )
script = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "RESET"
anims/BackgroundSwap = SubResource( 80 )
"anims/Make visible" = SubResource( 82 )
anims/RESET = SubResource( 81 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
